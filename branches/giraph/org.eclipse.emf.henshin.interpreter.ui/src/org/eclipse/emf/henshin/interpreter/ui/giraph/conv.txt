  /**
   * Convert an integer to a 4-byte representation.
   * @param bytes Byte array.
   * @param i Start index.
   * @return Integer.
   */
  private static int bytesToInt(byte[] bytes, int i) {
    return (((int) bytes[i]) << 24) +
      ((((int) bytes[i + 1]) & 0xFF) << 16) +
      ((((int) bytes[i + 2]) & 0xFF) << 8) +
      (((int) bytes[i + 3]) & 0xFF);
  }

  /**
   * Convert a 4-byte array into an integer.
   * @param value Integer value to be converted.
   * @param bytes Target byte array.
   * @param i Start index in the target array.
   */
  private static void intToBytes(int value, byte[] bytes, int i) {
    bytes[i] = (byte) (value >>> 24);
    bytes[i + 1] = (byte) (value >>> 16);
    bytes[i + 2] = (byte) (value >>> 8);
    bytes[i + 3] = (byte) value;
  }

    /**
   * Pretty-print a match.
   * @param match The Match to be printed.
   * @return The printed string.
   */
  private String matchToString(BytesWritable match) {
    byte[] bytes = match.getBytes();
    StringBuffer r = new StringBuffer();
    int d = 0;
    int e = 0;
    while (d < bytes.length) {
      int len = bytes[d++];
      r.append("[");
      for (e = 0; e < len; e++) {
        r.append(bytes[d + e]);
        if (e < len - 1) {
          r.append(",");
        }
      }
      r.append("] ");
      d += len;
    }
    return r.toString();
  }
  