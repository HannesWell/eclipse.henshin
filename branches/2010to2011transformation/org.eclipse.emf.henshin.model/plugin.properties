###############################################################################
# Copyright (c) 2010 CWI Amsterdam, Technical University Berlin, 
# Philipps-University Marburg and others. All rights reserved. 
# This program and the accompanying materials are made 
# available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     Technical University Berlin - initial API and implementation
###############################################################################
pluginName=Henshin Model
providerName=Eclipse Modeling Project


# OCL Messages
_Ocl_Msg_NamedElement_ValidName=If a name for an entity is set, the name shall not be an empty string. Instead, you may want to use "Restore default value" in the properties view.

_Ocl_Msg_TransformationSystem_uniqueUnitNames=Unit names have to be unique.
_EcoreConstraint_Msg_TransformationSystem_noCyclicUnits=Be aware of the cycle in your control flow, i.e., unit "{2}" is its direct or indirect subunit.
_EcoreConstraint_Msg_TransformationSystem_parameterNamesNotTypeName=Parameter names may not be equal to the name of an imported EClassifer.

_Ocl_Msg_Rule_lhsAndRhsNotNull=Rule requires LHS and RHS.
_Ocl_Msg_Rule_mappingsFromLeft2Right=Mappings contained in Rules have to map an origin from the rule's LHS to an image in the rule's RHS.
_EcoreConstraint_Msg_Rule_createdNodesNotAbstract=Node with abstract type cannot be created.
_EcoreConstraint_Msg_Rule_createdEdgesNotDerived=Edges with derived type cannot be created. 
_EcoreConstraint_Msg_Rule_deletedEdgesNotDerived=Edges with derived type cannot be deleted.

_Ocl_Msg_Parameter_nameRequired=Parameter name required.

_Ocl_Msg_Graph_uniqueNodeNames=Node names have to be unique in each Graph.

_Ocl_Msg_Mapping_ruleMapping_TypeEquality=Mapped nodes must be of the same type.

_Ocl_Msg_Node_uniqueAttributeTypes=Node's Attributes have to be of different types. 

_Ocl_Msg_Edge_equalParentGraphs=Source node and target node of an edge and the edge itself have to be in the same graph.

_Ocl_Msg_TransformationUnit_uniqueParameterNames=Parameter names have to be unique in each Transformation Unit.
_EcoreConstraint_Msg_TransformationUnit_parameterMappingsPointToDirectSubUnit=If one end of a Parameter Mapping is contained in the same Transformation Unit as Parameter Mapping, the other end has to be contained in direct subunit.

_Ocl_Msg_CountedUnit_ValidCountRange=Count value out of Range (count=-1 or count>0).

_Ocl_Msg_AmalgamationUnit_kernelLhsNodesMapped=Each Node of kernelRule's LHS has to be mapped to a Node in each mulitRule's LHS.  
_Ocl_Msg_AmalgamationUnit_kernelRhsNodesMapped=Each Node of kernelRule's RHS has to be mapped to a Node in each mulitRule's RHS.
_Ocl_Msg_AmalgamationUnit_kernelLhsEdgesMapped=Edges of a kernelRule's LHS requires corresponding Edge in each multiRule's LHS between its source's image and its target's image.
_Ocl_Msg_AmalgamationUnit_kernelRhsEdgesMapped=Edges of a kernelRule's RHS requires corresponding Edge in each multiRule's RHS between its source's image and its target's image.
_Ocl_Msg_AmalgamationUnit_lhsMappingsFromKernelToMulti=LhsMapping have to map a Node of the kernelRule's LHS to a multiRule's LHS.
_Ocl_Msg_AmalgamationUnit_rhsMappingsFromKernelToMulti=RhsMapping have to map a Node of the kernelRule's RHS to a multiRule's RHS.
_Ocl_Msg_AmalgamationUnit_noAdditionalMappingsFromMappedKernel=MultiRules may not provide additional Mappings for Nodes which are mapped from the kernelRule.

_EcoreConstraint_Msg_NestedCondition_mappingOriginContainedInParentCondition=The origin of a Mapping in a Nested Condition has to be contained in the direct parent Graph. 
_EcoreConstraint_Msg_NestedCondition_mappingImageContainedInCurrent=The image of a Mapping in a Nested Condition has to be contained directly in the same Nested Condition's conclusion.
