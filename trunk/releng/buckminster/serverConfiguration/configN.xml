<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Henshin nightly build using Buckminster, monitoring SVN every 6 hrs for changes.</description>
  <logRotator>
    <daysToKeep>5</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.model.Item.Workspace:anonymous</permission>
      <permission>hudson.model.Item.Workspace:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Item.Workspace:ckrause</permission>
      <permission>hudson.model.Item.Workspace:ebiermann</permission>
      <permission>hudson.model.Item.Workspace:sjurack</permission>
      <permission>hudson.model.Item.Configure:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Item.Configure:ckrause</permission>
      <permission>hudson.model.Item.Configure:ebiermann</permission>
      <permission>hudson.model.Item.Configure:sjurack</permission>
      <permission>hudson.model.Run.Update:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Run.Update:ckrause</permission>
      <permission>hudson.model.Run.Update:ebiermann</permission>
      <permission>hudson.model.Run.Update:sjurack</permission>
      <permission>hudson.model.Item.Build:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Item.Build:ckrause</permission>
      <permission>hudson.model.Item.Build:ebiermann</permission>
      <permission>hudson.model.Item.Build:sjurack</permission>
      <permission>hudson.model.Item.Read:anonymous</permission>
      <permission>hudson.model.Item.Read:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Item.Read:ckrause</permission>
      <permission>hudson.model.Item.Read:ebiermann</permission>
      <permission>hudson.model.Item.Read:sjurack</permission>
      <permission>hudson.model.Run.Delete:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Run.Delete:ckrause</permission>
      <permission>hudson.model.Run.Delete:ebiermann</permission>
      <permission>hudson.model.Run.Delete:sjurack</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>BUILD_TYPE</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>N</string>
              <string>I</string>
              <string>M</string>
              <string>S</string>
              <string>R</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_ALIAS</name>
          <description>shouldn&apos;t be changed for nightly builds</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>SIGN_UPDATE_SITE</name>
          <description>Whether to sign the artifacts (takes almost one hour). Not required for nightly builds.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FRESH_WORKSPACE</name>
          <description>Whether to checkout a full new workspace.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FRESH_TARGET_PLATFORM</name>
          <description>Whether to download a full target platform from scratch.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>VERSION</name>
          <description>Dictates in which folder the build will be placed in the download &quot;drops&quot;.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>0.9.0</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>PROJRELENGROOT</name>
          <description>The branch or tag from which to take the version of the releng project that must be used for this build.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>svn://dev.eclipse.org/svnroot/modeling/org.eclipse.emft.henshin/releng/buckminster</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>SKIP_LONG_JUNIT_TESTS</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty/>
  </properties>
  <scm class="hudson.scm.SubversionSCM">
    <locations>
      <hudson.scm.SubversionSCM_-ModuleLocation>
        <remote>http://dev.eclipse.org/svnroot/modeling/org.eclipse.emft.henshin/plugins/trunk</remote>
      </hudson.scm.SubversionSCM_-ModuleLocation>
    </locations>
    <useUpdate>true</useUpdate>
    <doRevert>false</doRevert>
    <excludedRegions></excludedRegions>
    <includedRegions></includedRegions>
    <excludedUsers></excludedUsers>
    <excludedRevprop></excludedRevprop>
    <excludedCommitMessages></excludedCommitMessages>
  </scm>
  <assignedNode>build2</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>Java 5 R 22 64bit (SUN)</jdk>
  <triggers class="vector">
    <hudson.triggers.SCMTrigger>
      <spec>10 * * * *</spec>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>SVN=/usr/local/bin/svn
promoteDirName=/opt/public/modeling/emft/henshin/henshinBuildPromoteDirNameN

echo &quot;building in &quot; $WORKSPACE

# nightly build uses rmap version with locally checked out artifacts
cp -f buckminster/henshin.rmap.nightly buckminster/henshin.rmap

mkdir -p buildroot

echo &quot;cleaning build area&quot;
rm -rf buildroot/buckminster.build
rm -rf buildroot/buckminster.temp
rm -rf buildroot/eclipse.staging
rm -rf buildroot/junit-workspace
rm -rf buildroot/test.results
rm -f buildroot/build.properties buildroot/tagging.properties

echo &quot;cleaning previous results&quot;
#rm -f Henshin-Update-*.zip
rm -rf site.p2
rm -f ?20*.zip

##### update plugins #####
if [ -d sourceTree/plugins ]; then 
    $SVN update sourceTree/plugins
else 
    $SVN checkout file:///svnroot/modeling/org.eclipse.emft.henshin/plugins/trunk sourceTree/plugins
    #$SVN checkout svn://dev.eclipse.org/svnroot/modeling/org.eclipse.emft.henshin/plugins/trunk sourceTree/plugins
fi

# workaround for &quot;Unable to find feature.xml in directory: /opt/users/hudsonbuild/workspace/henshin-nightly/sourceTree/features/.svn&quot;
if [ -d features.svn ]; then
  mv features.svn sourceTree/features/.svn
fi
##### update features #####
if [ -d sourceTree/features ]; then 
    $SVN update sourceTree/features
else 
    $SVN checkout svn://dev.eclipse.org/svnroot/modeling/org.eclipse.emft.henshin/features/trunk sourceTree/features
fi
# workaround for &quot;Unable to find feature.xml in directory: /opt/users/hudsonbuild/workspace/henshin-nightly/sourceTree/features/.svn&quot;
mv sourceTree/features/.svn features.svn

##### update tests #####
if [ -d sourceTree/tests ]; then 
    $SVN update sourceTree/tests
else 
    $SVN checkout svn://dev.eclipse.org/svnroot/modeling/org.eclipse.emft.henshin/tests/trunk sourceTree/tests
fi

##### update doc plugins #####
if [ -d sourceTree/doc ]; then 
    $SVN update sourceTree/doc
else 
    $SVN checkout svn://dev.eclipse.org/svnroot/modeling/org.eclipse.emft.henshin/doc/trunk sourceTree/doc
fi

##### update example plugins #####
if [ -d sourceTree/examples ]; then 
    $SVN update sourceTree/examples
else 
    $SVN checkout svn://dev.eclipse.org/svnroot/modeling/org.eclipse.emft.henshin/examples/trunk sourceTree/examples
fi


if [ $FRESH_WORKSPACE = &quot;true&quot; ]; then
  echo &quot;cleaning workspace&quot;
  rm -rf buildroot/buckminster.workspace
else
  echo &quot;updating workspace&quot;
  for i in $(ls -1d buildroot/buckminster.workspace/plugins/*.henshin*); do $SVN update $i; done
  for i in $(ls -1d buildroot/buckminster.workspace/features/*.henshin*); do $SVN update $i; done
fi

if [ $FRESH_TARGET_PLATFORM = &quot;true&quot; ]; then
  echo &quot;deleting previous target platform&quot;
  rm -rf buildroot/target.platform
else
  echo &quot;reusing previous target platform&quot;
fi


:
COMPACT_BUILD_ID=&quot;${BUILD_ID//[-_]}&quot;
COMPACT_BUILD_ID=&quot;${COMPACT_BUILD_ID:0:12}&quot;
FULL_BUILD_ID=${BUILD_TYPE}${COMPACT_BUILD_ID}
echo $FULL_BUILD_ID &gt; $promoteDirName
:
{
	cat &quot;${WORKSPACE}/buckminster/henshin-build.properties&quot;

	echo
	echo &quot;# Define the Build ID (added by Hudson job definition)&quot;
	echo &quot;build.id=${FULL_BUILD_ID}&quot;

	echo
	echo &quot;# Define the Build Alias (added by Hudson job definition)&quot;
	echo &quot;build.alias=${BUILD_ALIAS}&quot;

	echo
	echo &quot;# Define Hudson Build ID (added by Hudson job definition)&quot;
	echo &quot;hudson.build.id=${BUILD_ID}&quot;

	echo
	echo &quot;# Override default locations (added by Hudson job definition)&quot;
	echo &quot;buckminster.output.root=${WORKSPACE}/buildroot/buckminster.build&quot;
	echo &quot;buckminster.temp.root=${WORKSPACE}/buildroot/buckminster.temp&quot;
	echo &quot;eclipse.staging.area=/home/data/httpd/download-staging.priv/modeling/emft/henshin/signingN&quot;

	echo
	echo &quot;# Whether to sign the artifacts (added by Hudson job definition)&quot;
        echo &quot;site.signing=${SIGN_UPDATE_SITE}&quot;

} &gt; buildroot/build.properties
:
{
	echo &quot;# Define the Build ID to use for tagging (added by Hudson job definition)&quot;
	echo &quot;build.id=${COMPACT_BUILD_ID}&quot;

} &gt; buildroot/tagging.properties
:</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>buckminster=&quot;/opt/public/modeling/emft/henshin/buckminsterx86/install/buckminster --loglevel DEBUG -data ${WORKSPACE}/buildroot/buckminster.workspace -configuration /opt/public/modeling/emft/henshin/buckminsterx86/configuration -consolelog&quot;
#-debug /opt/public/modeling/emft/henshin/debug.options 

before=&quot;$(date +%s)&quot;
echo &quot;---------- BUCKMINSTER SETPREF ----------&quot;
$buckminster setpref targetPlatformPath=&quot;${WORKSPACE}/buildroot/target.platform&quot;

echo &quot;BUCKMINSTER SETPREF took : $(expr $(date +%s) - $before)s&quot;
before=&quot;$(date +%s)&quot;
echo &quot;---------- BUCKMINSTER IMPORT ----------&quot;
export no_proxy=&quot;dev.eclipse.org&quot;
$buckminster import -Declipse.download=&quot;file:/home/data/httpd/download.eclipse.org&quot; &quot;${WORKSPACE}/buckminster/henshin.mspec&quot; -vmargs -Declipse.p2.mirrors=false

echo &quot;BUCKMINSTER IMPORT took : $(expr $(date +%s) - $before)s&quot;
before=&quot;$(date +%s)&quot;


# set &quot;skip.long.junit.tests&quot; in the launch configuration
cat &quot;sourceTree/tests/org.eclipse.emft.henshin.tests/AllTests.launch&quot; | sed &quot;s/key=\&quot;skip.long.junit.tests\&quot;\\s\\+value=\&quot;.\\+\&quot;/key=\&quot;skip.long.junit.tests\&quot; value=\&quot;$SKIP_LONG_JUNIT_TESTS\&quot;/&quot; &gt; AllTests0.launch
cat AllTests0.launch &gt; sourceTree/tests/org.eclipse.emft.henshin.tests/AllTests.launch


echo &quot;---------- BUCKMINSTER RESOLVE ----------&quot;
$buckminster resolve &quot;${WORKSPACE}/buckminster/henshin.cquery&quot;

echo &quot;BUCKMINSTER RESOLVE took : $(expr $(date +%s) - $before)s&quot;
before=&quot;$(date +%s)&quot;
echo &quot;---------- BUCKMINSTER BUILD ----------&quot;
$buckminster build

echo &quot;BUCKMINSTER BUILD took : $(expr $(date +%s) - $before)s&quot;
before=&quot;$(date +%s)&quot;
echo &quot;---------- BUCKMINSTER JUNIT ----------&quot;
# Bug 326682
#if [ -e ~/.eclipse ]; then mv -f ~/.eclipse ~/.eclipse.old; fi
$buckminster junit -clean -DX.display=&quot;${DISPLAY}&quot; --launch &quot;org.eclipse.emft.henshin.tests/AllTests.launch&quot; --flatXML --output &quot;${WORKSPACE}/buildroot/test.results/xml/org.eclipse.emft.henshin.tests.xml&quot;

echo &quot;BUCKMINSTER JUNIT took : $(expr $(date +%s) - $before)s&quot;
before=&quot;$(date +%s)&quot;
echo &quot;---------- BUCKMINSTER PERFORM site.p2 ----------&quot;
$buckminster perform --properties &quot;${WORKSPACE}/buildroot/build.properties&quot; &quot;org.eclipse.emft.henshin.sdk#site.p2&quot;

echo &quot;BUCKMINSTER PERFORM &apos;site.p2&apos; took : $(expr $(date +%s) - $before)s&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Ant>
      <targets>report</targets>
      <antName>apache-ant-1.7.1</antName>
      <buildFile>buckminster/other.ant</buildFile>
    </hudson.tasks.Ant>
    <hudson.tasks.Shell>
      <command>promoteSignal=/opt/public/modeling/emft/henshin/henshinBuildPromoteSignalN
promoteVersion=/opt/public/modeling/emft/henshin/henshinBuildPromoteVersionN
promoteDirName=/opt/public/modeling/emft/henshin/henshinBuildPromoteDirNameN
lastBuildLogFile=/opt/public/modeling/emft/henshin/lastBuildLogN


romoteDirNameN)










p2 ./site.p2







son/job/henshin-nightly/${BUILD_NUMBER}/consoleText -O &quot;$lastBuildLogFile&quot;
exit 1
 1

D_ID&quot;
.txt&quot;

uot;










feature/zips FIXME.downloads
er_*-buckminster/promoter/promote.properties .</command>













gbarbier@mia-software.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.xvnc.Xvnc>
      <takeScreenshot>false</takeScreenshot>
    </hudson.plugins.xvnc.Xvnc>
  </buildWrappers>
</project>
