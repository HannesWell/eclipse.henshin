<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Henshin integration build using Buckminster.</description>
  <logRotator>
    <daysToKeep>5</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.model.Item.Workspace:anonymous</permission>
      <permission>hudson.model.Item.Workspace:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Item.Workspace:gdupe</permission>
      <permission>hudson.model.Item.Workspace:fgiquel</permission>
      <permission>hudson.model.Item.Workspace:gbarbier</permission>
      <permission>hudson.model.Item.Workspace:hbrunelie</permission>
      <permission>hudson.model.Item.Workspace:nbros</permission>
      <permission>hudson.model.Run.Delete:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Run.Delete:ckrause</permission>
      <permission>hudson.model.Run.Delete:sjurack</permission>
      <permission>hudson.model.Run.Delete:ebiermann</permission>
      <permission>hudson.model.Run.Update:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Run.Update:ckrause</permission>
      <permission>hudson.model.Run.Update:ebiermann</permission>
      <permission>hudson.model.Run.Update:sjurack</permission>
      <permission>hudson.model.Item.Read:anonymous</permission>
      <permission>hudson.model.Item.Read:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Item.Read:ckrause</permission>
      <permission>hudson.model.Item.Read:ebiermann</permission>
      <permission>hudson.model.Item.Read:sjurack</permission>
      <permission>hudson.model.Item.Configure:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Item.Configure:ckrause</permission>
      <permission>hudson.model.Item.Configure:ebiermann</permission>
      <permission>hudson.model.Item.Configure:sjurack</permission>
      <permission>hudson.model.Item.Build:ROLE_CALLISTO-DEV</permission>
      <permission>hudson.model.Item.Build:ckrause</permission>
      <permission>hudson.model.Item.Build:ebiermann</permission>
      <permission>hudson.model.Item.Build:sjurack</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>BUILD_TYPE</name>
          <description>&lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;b&gt;I&lt;/b&gt;: Integration
&lt;li&gt;&lt;b&gt;M&lt;/b&gt;: Maintenance
&lt;li&gt;&lt;b&gt;S&lt;/b&gt;: Stable (for &lt;i&gt;Milestones&lt;/i&gt; and &lt;i&gt;Release Candidate&lt;/i&gt; builds)
&lt;li&gt;&lt;b&gt;R&lt;/b&gt;: Release
&lt;li&gt;&lt;b&gt;N&lt;/b&gt;: Nightly (should be done with henshin-nightly job instead)
&lt;/ul&gt;&lt;/p&gt;</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>I</string>
              <string>M</string>
              <string>S</string>
              <string>R</string>
              <string>N</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_ALIAS</name>
          <description>set an alias like 0.9.0M5 and type = S to build a milestone</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>SIGN_UPDATE_SITE</name>
          <description>Whether to sign the artifacts (takes a while)</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>VERSION</name>
          <description>Dictates in which folder the build will be placed in the download &quot;drops&quot;.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>0.9.0</string>
              <string>0.8.1</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>PROJRELENGROOT</name>
          <description>The branch or tag from which to take the version of the releng project that must be used for this build.</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>svn://dev.eclipse.org/svnroot/modeling/org.eclipse.emft.henshin/releng/buckminster</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>build2</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <jdk>Java 5 R 22 64bit (SUN)</jdk>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
SVN=/usr/local/bin/svn

promoteDirName=/opt/public/modeling/emft/henshin/henshinBuildPromoteDirNameI
integrationTags=/opt/public/modeling/emft/henshin/integrationTags

#Xvnc :24 -geometry 1024x768 -depth 32 -ac &amp;
#Xvfb :24 -screen 0 1024x768x24 -ac &amp;
#echo &quot;$!&quot; &gt; xvncpid

echo &quot;cleaning&quot;
rm -rf buildroot
mkdir -p buildroot

echo &quot;cleaning previous results&quot;
rm -rf site.p2
rm -f ?20*.zip

:
COMPACT_BUILD_ID=&quot;${BUILD_ID//[-_]}&quot;
COMPACT_BUILD_ID=&quot;${COMPACT_BUILD_ID:0:12}&quot;
FULL_BUILD_ID=${BUILD_TYPE}${COMPACT_BUILD_ID}
echo $FULL_BUILD_ID &gt; $promoteDirName
:
{
        cat &quot;${WORKSPACE}/buckminster/henshin-build.properties&quot;

        echo
        echo &quot;# Define the Build ID (added by Hudson job definition)&quot;
        echo &quot;build.id=${FULL_BUILD_ID}&quot;

        echo
        echo &quot;# Define the Build Alias (added by Hudson job definition)&quot;
        echo &quot;build.alias=${BUILD_ALIAS}&quot;

        echo
        echo &quot;# Define Hudson Build ID (added by Hudson job definition)&quot;
        echo &quot;hudson.build.id=${BUILD_ID}&quot;

        echo
        echo &quot;# Override default locations (added by Hudson job definition)&quot;
        echo &quot;buckminster.output.root=${WORKSPACE}/buildroot/buckminster.build&quot;
        echo &quot;buckminster.temp.root=${WORKSPACE}/buildroot/buckminster.temp&quot;
        echo &quot;eclipse.staging.area=/home/data/httpd/download-staging.priv/modeling/emft/henshin/signingI&quot;

        echo
        echo &quot;# Whether to sign the artifacts (added by Hudson job definition)&quot;
        echo &quot;site.signing=${SIGN_UPDATE_SITE}&quot;

} &gt; buildroot/build.properties
:
{
        echo &quot;# Define the Build ID to use for tagging (added by Hudson job definition)&quot;
        echo &quot;build.id=${COMPACT_BUILD_ID}&quot;

} &gt; buildroot/tagging.properties
:
revision=$($SVN info svn://dev.eclipse.org/svnroot/modeling/org.eclipse.emft.henshin | grep &apos;^Revision:&apos; | awk &apos;{print $2}&apos;)
echo $FULL_BUILD_ID $PROJRELENGROOT $revision $VERSION &gt;&gt; $integrationTags</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>buckminster=&quot;/opt/public/modeling/emft/henshin/buckminsterx86/install/buckminster --loglevel DEBUG -data ${WORKSPACE}/buildroot/buckminster.workspace -consolelog&quot;

before=&quot;$(date +%s)&quot;
echo &quot;---------- BUCKMINSTER SETPREF ----------&quot;
$buckminster setpref targetPlatformPath=&quot;${WORKSPACE}/buildroot/target.platform&quot;

echo &quot;BUCKMINSTER SETPREF took : $(expr $(date +%s) - $before)s&quot;
before=&quot;$(date +%s)&quot;
echo &quot;---------- BUCKMINSTER IMPORT ----------&quot;
export no_proxy=&quot;dev.eclipse.org&quot;
$buckminster import -Declipse.download=&quot;file:/home/data/httpd/download.eclipse.org&quot; &quot;${WORKSPACE}/buckminster/henshin.mspec&quot; -vmargs -Declipse.p2.mirrors=false

echo &quot;BUCKMINSTER IMPORT took : $(expr $(date +%s) - $before)s&quot;
before=&quot;$(date +%s)&quot;
echo &quot;---------- BUCKMINSTER RESOLVE ----------&quot;
$buckminster resolve &quot;${WORKSPACE}/buckminster/henshin.cquery&quot;

echo &quot;BUCKMINSTER RESOLVE took : $(expr $(date +%s) - $before)s&quot;
before=&quot;$(date +%s)&quot;
echo &quot;---------- BUCKMINSTER BUILD ----------&quot;
$buckminster build

#echo &quot;BUCKMINSTER BUILD took : $(expr $(date +%s) - $before)s&quot;
#before=&quot;$(date +%s)&quot;
#echo &quot;---------- BUCKMINSTER JUNIT ----------&quot;
#$buckminster junit -DX.display=&quot;${DISPLAY}&quot; --launch &quot;org.eclipse.emft.henshin.tests/AllTests.launch&quot; --flatXML --output &quot;${WORKSPACE}/buildroot/test.results/xml/org.eclipse.emft.henshin.tests.xml&quot;

#echo &quot;BUCKMINSTER JUNIT took : $(expr $(date +%s) - $before)s&quot;
before=&quot;$(date +%s)&quot;
echo &quot;---------- BUCKMINSTER PERFORM site.p2 ----------&quot;
$buckminster perform --properties &quot;${WORKSPACE}/buildroot/build.properties&quot; &quot;org.eclipse.emft.henshin.sdk#site.p2&quot;

echo &quot;BUCKMINSTER PERFORM &apos;site.p2&apos; took : $(expr $(date +%s) - $before)s&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Ant>
      <targets>report</targets>
      <antName>apache-ant-1.7.1</antName>
      <buildFile>buckminster/other.ant</buildFile>
    </hudson.tasks.Ant>
    <hudson.tasks.Shell>
      <command>#stop Xvnc
#kill -s INT $(cat xvncpid)

promoteSignal=/opt/public/modeling/emft/henshin/henshinBuildPromoteSignalI
promoteVersion=/opt/public/modeling/emft/henshin/henshinBuildPromoteVersionI
promoteDirName=/opt/public/modeling/emft/henshin/henshinBuildPromoteDirNameI
lastBuildLogFile=/opt/public/modeling/emft/henshin/lastBuildLogI

#zipName=Henshin-Update-${BUILD_ID}-Incubation.zip
FULL_BUILD_ID=$(cat /opt/public/modeling/emft/henshin/henshinBuildPromoteDirNameI)

if [ -n &quot;$BUILD_ALIAS&quot; ]; then
  zipName=Henshin-Update-${BUILD_ALIAS}.zip
else
  zipName=Henshin-Update-${FULL_BUILD_ID}.zip
fi

rm -rf tmp
mkdir -p &quot;tmp/$FULL_BUILD_ID&quot;

mv buildroot/buckminster.build/org.eclipse.emf.henshin.sdk_*/site.p2 ./site.p2
cd site.p2
zip -r $zipName *
cd ..
mv site.p2/$zipName &quot;tmp/$FULL_BUILD_ID&quot;

# Test if build succeeded. If not, then exit with error 1.
# Copy the log, because the commands appear in the grepped log...
wget --quiet --no-check-certificate https://hudson.eclipse.org/hudson/job/henshin-integration/${BUILD_NUMBER}/consoleText -O &quot;$lastBuildLogFile&quot;
#cat $lastBuildLogFile | grep &quot;BUILD FAILED&quot; &amp;&amp; exit 1
#cat $lastBuildLogFile | grep &quot;BUILD SUCCESSFUL&quot; || exit 1

cp /opt/public/modeling/emft/henshin/index.php &quot;tmp/$FULL_BUILD_ID&quot;
cp &quot;$lastBuildLogFile&quot; &quot;tmp/$FULL_BUILD_ID/buildlog.txt&quot;
if [ -e buildroot/test.results ]; then
  mv buildroot/test.results &quot;tmp/$FULL_BUILD_ID/testresults&quot;
fi

cd tmp
zip -r ${FULL_BUILD_ID}.zip *
cd ..
mv tmp/${FULL_BUILD_ID}.zip .

# trigger promote (automatic only for integration builds)
if [ &quot;$BUILD_TYPE&quot; = &quot;I&quot; ]; then
  echo ${FULL_BUILD_ID} &gt; $promoteSignal
  echo $VERSION &gt; $promoteVersion
fi

#mv buildroot/buckminster.build/org.eclipse.FIXME.build_*-eclipse.feature/zips FIXME.downloads
#mv buildroot/buckminster.build/org.eclipse.FIXME.releng.buckminster_*-buckminster/promoter/promote.properties .</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.zip</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>tmp/N20*/testresults/xml/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Mailer>
      <recipients>henshin.ck@gmail.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.xvnc.Xvnc>
      <takeScreenshot>false</takeScreenshot>
    </hudson.plugins.xvnc.Xvnc>
  </buildWrappers>
</project>
