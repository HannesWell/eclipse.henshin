<?xml version="1.0"?>
<!--
  - Author:  Gregor Bonifer
  -->

<project name="org.eclipse.emf.henshin.editor.doc.source" default="cleanDeploy">

	<property name="project.doc" value="org.eclipse.emf.henshin.editor.doc"/>
	<property name="project.docSource" value="org.eclipse.emf.henshin.editor.doc.source"/>
	
	<property name="dir.src" value="${basedir}/src" />
	<property name="dir.tmp" value="${basedir}/tmp" />	
	<property name="dir.tmp.docbook" value="${dir.tmp}/docbook" />
	<property name="dir.tmp.help" value="${dir.tmp}/help" />
	<property name="dir.out" value="${basedir}/out" />	

	<property name="xsl.dir" value="${basedir}/lib/docbook-xsl-1.76.1" />
	<property name="xsl.eclipse" value="${xsl.dir}/eclipse/eclipse3.xsl" />

	<target name="refresh">
		<eclipse.refreshLocal resource="${project.doc}" depth="infinite" />
		<eclipse.refreshLocal resource="${project.docSource}" depth="infinite" />
	</target>

	<target name="cleanup">
		<delete dir="${dir.tmp}" />
		<delete dir="${dir.out}" />
	</target>

	<target name="setupTmpDirs" depends="cleanup">
		<mkdir dir="${dir.tmp}" />
		<mkdir dir="${dir.tmp.docbook}" />
		<mkdir dir="${dir.tmp.help}" />
		<mkdir dir="${dir.out}" />
	</target>

	<target name="buildDocBook" depends="setupTmpDirs">
		<xsl.xinclude in="${dir.src}/0_Documentation.xml" out="${dir.tmp.docbook}/book.xml"/>
	</target>

	<target name="buildEclipseHelp" depends="buildDocBook">
		<xslt style="${xsl.eclipse}" extension=".html" basedir="${dir.tmp.docbook}" destdir="${dir.tmp.help}">
			<param name="eclipse.manifest" expression="0" />
			<param name="create.plugin.xml" expression="0" />
			<param name="manifest.in.base.dir" expression="1" />
			<param name="generate.index" expression="1" />
			<param name="base.dir" expression="${dir.tmp.help}/" />
			<param name="html.stylesheet" expression="css/styles.css" />			
		</xslt>
	</target>

	<target name="package" depends="buildEclipseHelp">
		<move file="${dir.tmp.help}/toc.xml" todir="${dir.out}" />
		<copy todir="${dir.tmp.help}/img">
			<fileset dir="${dir.src}/img" />
		</copy>
		<copy todir="${dir.tmp.help}/css">
			<fileset dir="${dir.src}/css" />
		</copy>
		<zip destfile="${dir.out}/doc.zip" basedir="${dir.tmp.help}" />
	</target>

	<target name="deploy" depends="package">
		<copy todir="../${project.doc}/">
			<fileset dir="${dir.out}" />
		</copy>
	</target>

	<target name="cleanDeploy">
		<antcall target="deploy" />
		<antcall target="cleanup" />
		<antcall target="refresh" />
	</target>

</project>