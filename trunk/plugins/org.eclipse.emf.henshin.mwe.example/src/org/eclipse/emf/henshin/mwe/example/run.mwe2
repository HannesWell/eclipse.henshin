/** 
 * This workflow illustrates the usage of the Henshin-MWE-Components.
 * 	 
 */
module run

var outputPath = "output"

Workflow {

	bean = org.eclipse.emf.mwe.utils.StandaloneSetup {}

	component = org.eclipse.emf.mwe.utils.Reader {
		uri = "model/exampleModel.ecore"
		modelSlot = "inputModel"
	}

	component = org.eclipse.emf.henshin.mwe.HenshinTransformationLoader {
		uri = "model/trans.henshin"
		unitAssignment = {
			isRule = true
			slot = "dup"
			unit = "dup"
		}
		unitAssignment = {
			isRule = false
			slot = "moveAll"
			unit = "moveAll"
		}
	}

	component = org.eclipse.emf.henshin.mwe.SimpleEObjectCreator {
		slotAssignment = {
			eClassifier = "EPackage"
			ePackage = "http://www.eclipse.org/emf/2002/Ecore"
			slot = "otherPackage"
			attribute = {
				name = "name"
				value = "OtherPackage"
			}
		}
	}

	component = org.eclipse.emf.henshin.mwe.HenshinTransformation {
		transformationSlot = "moveAll"
		modelSlot = "inputModel"
		modelSlot = "otherPackage"
		applicationRequired = true
		parameter = {
			name = "targetPackage"
			valueType = org.eclipse.emf.henshin.mwe.parameters.SlotValue {
				slot = "otherPackage"
			}
		}
		parameter = {
			name = "prefix"
			valueType = org.eclipse.emf.henshin.mwe.parameters.StringValue {
				value = "XY_"
			}
		}
	}

	component = org.eclipse.xpand2.Generator {
		fileEncoding = 'iso-8859-1'
		metaModel = org.eclipse.xtend.typesystem.emf.EmfRegistryMetaModel {}
		expand = "org::eclipse::emf::henshin::mwe::example::ListClasses::PackageTmpl FOR otherPackage"
		outlet = {
			path = outputPath
		}
	}

	component = org.eclipse.emf.henshin.mwe.HenshinTransformation {
		transformationSlot = "dup"
		modelSlot = "inputModel"
		applicationRequired = true
		parameter = {
			name = "prefix"
			valueType = org.eclipse.emf.henshin.mwe.parameters.StringValue {
				value = "Copy_of_"
			}
		}
	}

	component = org.eclipse.xpand2.Generator {
		fileEncoding = 'iso-8859-1'
		metaModel = org.eclipse.xtend.typesystem.emf.EmfRegistryMetaModel {}
		expand = "org::eclipse::emf::henshin::mwe::example::ListClasses::PackageTmpl FOR inputModel"
		outlet = {
			path = outputPath
		}
	}

}