<%@ jet package="org.eclipse.emf.henshin.codegen.templates" 
		imports="java.util.* org.eclipse.emf.henshin.codegen.model.* org.eclipse.emf.henshin.model.* org.eclipse.emf.codegen.ecore.genmodel.*" 
		class="GenUnitInterpreter"%><%

GenUnit genUnit = (GenUnit) argument;
GenTransformation genTrafo = genUnit.getGenTransformation();
boolean isRule = (genUnit instanceof GenRule);

String unitModelName = genUnit.getMethodFormatted().toUpperCase();
unitModelName = (isRule ? "RULE" : "UNIT") + "_" + unitModelName;

// Unit model:

%>
	/**
	 * @generated
	 */
	private static <%= (isRule ? "Rule" : "TransformationUnit") + " " + unitModelName %> = null;

<%

// Unit parameters:
String paramsString = "";
List<String> params = genUnit.getParametersFormatted();
for (int i=0; i<params.size(); i++) {
	paramsString = paramsString + "String " + params.get(i);
	if (i<params.size()-1) paramsString = paramsString + ", ";
}

// Visibility of the unit:
String visibility = genUnit.isPublic() ? "public" : "protected";

%>
	/**
	 * @generated
	 */
	<%= visibility %> boolean <%= genUnit.getMethodFormatted() + "(" + paramsString + ")" %> {
		if (<%= unitModelName %>==null) {
			<%= unitModelName %> = HenshinFactory.eINSTANCE.create<%= genUnit.getUnit().eClass().getName() %>(); <%
			if (isRule) {
				Rule rule = ((GenRule) genUnit).getRule();
				%>
			<%= unitModelName %>.setLhs(HenshinFactory.eINSTANCE.createGraph());
			<%= unitModelName %>.setRhs(HenshinFactory.eINSTANCE.createGraph()); <%
				for (Node lhsNode : rule.getLhs().getNodes()) {
					GenPackage genPackage = genTrafo.getGenPackage(lhsNode.getType().getEPackage());
					GenClass genClass = genTrafo.getGenClass(lhsNode.getType());
					String nodeType = "null"; //genPackage.getQualifiedPackageInterfaceName() + 
							//".eINSTANCE.get" + genClass.getFormattedName() + "()";
					%>
			HenshinFactory.eINSTANCE.createNode(<%= unitModelName + ".getLhs(), " + nodeType %>); <%
				}
				for (Node lhsNode : rule.getLhs().getNodes()) { 
					String nodeType = "null"; %>
			HenshinFactory.eINSTANCE.createNode(<%= unitModelName + ".getRhs(), " + nodeType %>); <%
				}
				for (Mapping mapping : rule.getMappings()) { 
					String origin = unitModelName + ".getLhs().getNodes().get(" + 
									rule.getLhs().getNodes().indexOf(mapping.getOrigin()) + ")";
					String image  = unitModelName + ".getRhs().getNodes().get(" + 
									rule.getRhs().getNodes().indexOf(mapping.getImage()) + ")"; %>
			<%= unitModelName %>.getMappings().add(HenshinFactory.eINSTANCE.createMapping(<%= origin %>, <%= image %>));<%
				}
			}
			else {
			
			}	
			%>
		}<% 
		String applicationType = isRule ? "RuleApplication" : "UnitApplication";
		%>
		<%= applicationType %> application = new <%= applicationType %>(engine, <%= unitModelName %>);
		return application.apply();
	}
